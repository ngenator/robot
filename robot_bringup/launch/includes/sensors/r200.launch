<launch>
  <arg name="robot_name" default="robot"/>
  
  <!-- "camera" should be a user friendly string to uniquely identify the device namespace.
       All topics are pushed down into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera"          default="camera" />

  <!-- Type of RealSense camera -->
  <arg name="camera_type"     default="R200" />

  <!-- "serial_no" or "usb_port_id" should be a unique identifier to connect to a device -->
  <arg name="serial_no"     default="" />
  <arg name="usb_port_id"   default="" /> <!-- USB "Bus#-Port#" -->

  <!-- Best know configuration for generating depth registered point cloud. -->
  <arg name="mode"            default="manual" />
  <arg name="color_width"     default="640" />
  <arg name="color_height"    default="480" />
  <arg name="depth_width"     default="480" />
  <arg name="depth_height"    default="360" />
  <arg name="depth_fps"       default="30" />
  <arg name="color_fps"       default="30" />

  <!-- Arguments for remapping all device namespaces -->
  <arg name="depth"           default="depth" />
  <arg name="rgb"             default="color" />

  <!-- Optionally suppress loading the driver nodelet. Useful while playing back recorded raw data from a bag.-->
  <arg name="load_driver"     default="true" />
  <arg name="publish_tf"      default="true" />

  <arg name="emitter_enabled" default="true"/>
  
  <param name="$(arg camera)/driver/r200_emitter_enabled" value="$(arg emitter_enabled)"/>

  <!-- Push down all topics/nodelets into "camera" namespace -->
  <group ns="$(arg camera)">

    <!-- Start nodelet manager in provided namespace -->
    <arg name="manager" value="$(arg camera)_nodelet_manager" />

    <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" machine="$(arg robot_name)">
      <param name="num_worker_threads" value="4" />
    </node>

    <!-- Load driver -->
    <group if="$(arg load_driver)">
      <node pkg="nodelet" type="nodelet" name="driver"
        args="load realsense_camera/$(arg camera_type)Nodelet $(arg manager)" machine="$(arg robot_name)">
        <param name="serial_no"                type="str"  value="$(arg serial_no)" />
        <param name="usb_port_id"              type="str"  value="$(arg usb_port_id)" />
        <param name="camera_type"              type="str"  value="$(arg camera_type)" />
        <param name="base_frame_id"            type="str"  value="$(arg camera)_link" />
        <param name="depth_frame_id"           type="str"  value="$(arg camera)_depth_frame" />
        <param name="color_frame_id"           type="str"  value="$(arg camera)_rgb_frame" />
        <param name="ir_frame_id"              type="str"  value="$(arg camera)_ir_frame" />
        <param name="ir2_frame_id"             type="str"  value="$(arg camera)_ir2_frame" />
        <param name="fisheye_frame_id"         type="str"  value="$(arg camera)_fisheye_frame" />
        <param name="imu_frame_id"             type="str"  value="$(arg camera)_imu_frame" />
        <param name="depth_optical_frame_id"   type="str"  value="$(arg camera)_depth_optical_frame" />
        <param name="color_optical_frame_id"   type="str"  value="$(arg camera)_rgb_optical_frame" />
        <param name="ir_optical_frame_id"      type="str"  value="$(arg camera)_ir_optical_frame" />
        <param name="ir2_optical_frame_id"     type="str"  value="$(arg camera)_ir2_optical_frame" />
        <param name="fisheye_optical_frame_id" type="str"  value="$(arg camera)_fisheye_optical_frame" />
        <param name="imu_optical_frame_id"     type="str"  value="$(arg camera)_imu_optical_frame" />
      </node>

      <!-- Generate a fake laserscan from the depth image -->
      <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan" machine="$(arg robot_name)">
        <remap from="image" to="$(arg depth)/image_raw"/>
      </node>
    </group>

    <!-- Color rectified image -->
    <node pkg="nodelet" type="nodelet" name="$(arg rgb)_rectify_color" machine="$(arg robot_name)"
          args="load image_proc/rectify $(arg manager)">
      <remap from="image_mono" to="$(arg rgb)/image_raw" />
      <remap from="image_rect" to="$(arg rgb)/image_rect_color" />
    </node>

    <!-- Rectified raw image (internal use) -->
    <node pkg="nodelet" type="nodelet" name="$(arg depth)_rectify_depth" machine="$(arg robot_name)"
          args="load image_proc/rectify $(arg manager)">
      <remap from="image_mono"  to="$(arg depth)/image_raw" />
      <remap from="image_rect"  to="$(arg depth)/image_rect_raw" />
      <!-- Use nearest neighbor (0) interpolation so we don't streak across
          depth boundaries -->
      <param name="interpolation" value="0" />
    </node>

    <!-- Rectified depth image -->
    <node pkg="nodelet" type="nodelet" name="$(arg depth)_metric_rect" machine="$(arg robot_name)"
          args="load depth_image_proc/convert_metric $(arg manager)">
      <remap from="image_raw" to="$(arg depth)/image_rect_raw" />
      <remap from="image"     to="$(arg depth)/image_rect" />
    </node>

    <!-- XYZ point cloud -->
    <node pkg="nodelet" type="nodelet" name="$(arg depth)_points" machine="$(arg robot_name)"
          args="load depth_image_proc/point_cloud_xyz $(arg manager)">
      <remap from="image_rect" to="$(arg depth)/image_rect_raw"/>  <!-- Use raw image for efficiency -->
      <remap from="points"     to="$(arg depth)/points" />
    </node>
  </group>
</launch>
