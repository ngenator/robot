<launch>
  <!-- Arguments -->
  <arg name="external_manager" default="false"/>
  <arg name="manager"          default="mobile_base_nodelet_manager"/>

  <!-- Standalone nodelet manager -->
  <node unless="$(arg external_manager)" pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" required="true">
    <param name="num_worker_threads" value="8" />
  </node>

  <!-- Mobile base -->
  <node pkg="nodelet" type="nodelet" name="mobile_base" args="load kobuki_node/KobukiNodelet $(arg manager)">
    <rosparam file="$(find robot_bringup)/params/mobile_base/mobile_base.yaml" command="load"/>
    
    <!-- Override param file -->
    <param name="publish_tf"  value="true"/>
    
    <!-- <remap from="mobile_base/odom"         to="odom"/> -->
    <!-- <remap from="mobile_base/joint_states" to="joint_states"/> -->
  </node>
  
  <!-- Diagnostic aggregator -->
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
    <rosparam command="load" file="$(find robot_bringup)/params/mobile_base/diagnostics.yaml" />
  </node>

  <!-- Bumper feedback to pointcloud -->
  <node pkg="nodelet" type="nodelet" name="bumper2pointcloud" args="load kobuki_bumper2pc/Bumper2PcNodelet $(arg manager)">
    <param name="pointcloud_radius" value="0.25"/>
    
    <remap from="bumper2pointcloud/pointcloud"   to="mobile_base/sensors/bumper_pointcloud"/>
    <remap from="bumper2pointcloud/core_sensors" to="mobile_base/sensors/core"/>
  </node>

  <!-- Velocity command multiplexer -->
  <!-- Note: Subscribes to the input topics defined below in yaml_cfg_data prefixed with the node name -->
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet $(arg manager)" respawn="true">
    <rosparam param="yaml_cfg_data">
      '{
        subscribers: [
          { name: "Safety Controller", topic: "input/safety",     timeout: 0.2, priority: 100 },
          { name: "Teleoperation",     topic: "input/teleop",     timeout: 0.2, priority: 50 },
          { name: "Docking",           topic: "input/docking",    timeout: 0.2, priority: 25 },          
          { name: "Navigation",        topic: "input/navigation", timeout: 0.2, priority: 1 }
        ],
        publisher: "output/cmd_vel"
      }'
    </rosparam>
   
    <remap from="cmd_vel_mux/output/cmd_vel" to="mobile_base/commands/velocity"/>
  </node>
  
  <!-- Safety controller -->
  <node pkg="nodelet" type="nodelet" name="safety_controller" args="load kobuki_safety_controller/SafetyControllerNodelet $(arg manager)">
    <remap from="safety_controller/cmd_vel" to="cmd_vel_mux/input/safety"/>
    
    <remap from="safety_controller/events/bumper"     to="mobile_base/events/bumper"/>
    <remap from="safety_controller/events/cliff"      to="mobile_base/events/cliff"/>
    <remap from="safety_controller/events/wheel_drop" to="mobile_base/events/wheel_drop"/>
    
    <remap from="safety_controller/disable" to="mobile_base/safety_controller/disable"/>
    <remap from="safety_controller/enable"  to="mobile_base/safety_controller/enable"/>
    <remap from="safety_controller/reset"   to="mobile_base/safety_controller/reset"/>
  </node>

  <!-- Autodocking -->
  <node pkg="nodelet" type="nodelet" name="dock_drive" args="load kobuki_auto_docking/AutoDockingNodelet $(arg manager)">
    <!-- minimum linear velocity in m/s -->
    <param name="min_abs_v" type="double" value="0.01" />
    <!-- minimum angular velocity in rad/s -->
    <param name="min_abs_w" type="double" value="0.1" />

    <remap from="dock_drive/odom"        to="mobile_base/odom"/>
    <remap from="dock_drive/core"        to="mobile_base/sensors/core"/>
    <remap from="dock_drive/dock_ir"     to="mobile_base/sensors/dock_ir"/>
    <remap from="dock_drive/motor_power" to="mobile_base/commands/motor_power"/>
    <remap from="dock_drive/velocity"    to="cmd_vel_mux/input/docking"/>

    <remap from="dock_drive/debug/feedback"   to="mobile_base/dock_drive/dock_drive/debug/feedback"/>
    <remap from="dock_drive/debug/mode_shift" to="mobile_base/dock_drive/dock_drive/debug/mode_shift"/>
  </node>
</launch>